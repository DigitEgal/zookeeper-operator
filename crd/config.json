{
  "config_settings": {
    "unit": [
      {
        "name": "url",
        "regex": "(www.)?[-a-zA-Z0-9@:%._+~#=]{2,256}.[a-z]{2,4}b([-a-zA-Z0-9@:%_+.~#?&//=]*)"
      },
      {
        "name": "uri",
        "regex": "/^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?$/i"
      },
      {
        "name": "directory",
        "regex": "^/|(/[\\w-]+)+$"
      },
      {
        "name": "binary",
        "regex": "^/|(/[\\w-]+)+$"
      },
      {
        "name": "file",
        "regex": "^/|(/[\\w-]+)+$"
      },
      {
        "name": "email",
        "regex": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
      },
      {
        "name": "password",
        "regex": "^[a-zA-Z]\\w{3,14}$"
      },
      {
        "name": "ip",
        "regex": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
      },
      {
        "name": "port",
        "regex": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
      },
      {
        "name": "config",
        "regex": "(\\w[\\w\\d._-]+)=([\\w\\d.:!\\?\/_-]+),?"
      },
      {
        "name": "class",
        "regex": "^(\\w[\\w\\d_-]*\\.)*(\\w[\\w\\d_-]+)$"
      },
      {
        "name": "memory",
        "regex": "(^\\p{N}+)(?:\\s*)((?:b|k|m|g|t|p|kb|mb|gb|tb|pb)\\b$)"
      },
      {
        "name": "time",
        "regex": "(^\\p{N}+)(?:\\s*)((?:ns|mus|ms|s|m|min|h|d)\\b$)"
      },
      {
        "name": "number",
        "regex": "^-?[0-9][0-9,\\.]+$"
      },
      {
        "name": "text",
        "regex": ".*"
      }
    ]
  },
  "config_options": [
    {
      "option_names": [
        {
          "name": "tickTime",
          "kind": "conf",
          "config_file": "zoo.cfg"
        }
      ],
      "default_value": [
        {
          "value": "3000"
        }
      ],
      "datatype": {
        "type": "integer",
        "min": "1",
        "unit": "time",
        "default_unit_type": "ms",
        "unit_in_value": "false"
      },
      "roles": [
        {
          "name": "spark-master",
          "required": true
        }
      ],
      "as_of_version": "0.0.0",
      "restart_required": true,
      "comment": "ZK only checks whether the value is 0, all other values (including negative ones) are considered valid, we disallow negative values here, see QuorumPeerConfig.java",
      "description": "The basic time unit in milliseconds used by ZooKeeper. It is used to do heartbeats and the minimum session timeout will be twice the tickTime."
    },
    {
      "option_names": [
        {
          "name": "clientPort",
          "kind": "conf",
          "config_file": "zoo.cfg"
        }
      ],
      "datatype": {
        "type": "integer",
        "min": "1",
        "unit": "port"
      },
      "recommended_value": [
        {
          "value": "2181"
        }
      ],
      "roles": [
        {
          "name": "zookeeper-server",
          "required": true
        }
      ],
      "as_of_version": "0.0.0",
      "restart_required": true,
      "comment": "See QuorumPeerConfig.java, I'm unsure what happens when this is set to 0, it might work, it might not",
      "description": "The port to listen for client connections; that is, the port that clients attempt to connect to."
    },
    {
      "option_names": [
        {
          "name": "dataDir",
          "kind": "conf",
          "config_file": "zoo.cfg"
        }
      ],
      "datatype": {
        "type": "string",
        "unit": "directory"
      },
      "recommended_value": [
        {
          "value": "/var/lib/zookeeper"
        }
      ],
      "roles": [
        {
          "name": "zookeeper-server",
          "required": true
        }
      ],
      "as_of_version": "0.0.0",
      "restart_required": true,
      "comment": "See QuorumPeerConfig.java",
      "description": "The location where ZooKeeper will store the in-memory database snapshots and, unless specified otherwise, the transaction log of updates to the database. Note: Be careful where you put the transaction log. A    dedicated transaction log device is key to consistent good performance. Putting the log on a busy device will adversely affect performance."
    },
    {
      "option_names": [
        {
          "name": "initLimit",
          "kind": "conf",
          "config_file": "zoo.cfg"
        }
      ],
      "recommended_values": [
        {
          "value": "5"
        }
      ],
      "datatype": {
        "type": "integer",
        "min": "1"
      },
      "roles": [
        {
          "name": "zookeeper-server",
          "required": true
        }
      ],
      "as_of_version": "0.0.0",
      "restart_required": true,
      "comment": "ZK only checks whether the value is 0, all other values (including negative ones) are considered valid, we disallow negative values here, see QuorumPeerConfig.java",
      "description": "Amount of time, in ticks (see `tickTime`), to allow followers to connect and sync to a leader. Increased this value as needed, if the amount of data managed by ZooKeeper is large."
    },
    {
      "option_names": [
        {
          "name": "syncLimit",
          "kind": "conf",
          "config_file": "zoo.cfg"
        }
      ],
      "recommended_values": [
        {
          "value": "2"
        }
      ],
      "datatype": {
        "type": "integer",
        "min": "1"
      },
      "roles": [
        {
          "name": "zookeeper-server",
          "required": true
        }
      ],
      "as_of_version": "0.0.0",
      "restart_required": true,
      "comment": "ZK only checks whether the value is 0, all other values (including negative ones) are considered valid, we disallow negative values here, see QuorumPeerConfig.java",
      "description": "Amount of time, in ticks (see `tickTime`), to allow followers to sync with ZooKeeper. If followers fall too far behind a leader, they will be dropped. In other words: The number of ticks that can pass between sending a request and getting an acknowledgment before a followr is dropped."
    }
  ]
}
